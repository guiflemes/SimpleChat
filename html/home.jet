<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
    
    <link
        rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.css"
        integrity="sha512-7DgarsuahzxiOonlZeYgjXuPFVEDIylPzzlmANJdccCIO0H7ofXKbAKf0FWCkh8NkCFswe3Hpj6HegSTYH6SJQ=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer" />
    <style>
        .chatbox {
            outline: 1px solid silver;
            min-height: 160px;
            padding: 0.5em;
        }
    </style>
</head>
<body>
<div class="container">
    <div class="row">
        <div class="col">
            <h1 class="mt-3">This is the home page</h1>
            <hr>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <h3>Chat</h3>
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" name="username" id="username" class="form-control" autocomplete="off">
            </div>

            <div class="form-group">
                <label for="message">Message:</label>
                <input type="text" name="message" id="message" class="form-control" autocomplete="off">
            </div>

            <hr>
            <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send Message</a>

            <input type="hidden" name="action" id="action">

            <div id="status" class="mt-2 float-end">

            </div>

            <div id="output" class="chatbox mt-3">

            </div>

        </div>
        <div class="col-md-4">
            <h3>Who's Online</h3>

            <ul id="online_users">

            </ul>
        </div>
    </div>
</div>

</body>

<script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
    crossorigin="anonymous">
</script>

<script
    src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js"
    integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw=="
    crossorigin="anonymous" referrerpolicy="no-referrer">
</script>

<script src="/static/reconnecting-websocket.min.js"></script>

<script>

    let socket = null
    let o = document.getElementById("output")
    let messageField = document.getElementById("message")
    let userField = document.getElementById("username")

    window.onbeforeunload = () => {
        let jsonData = {action:"left"}
        socket.send(JSON.stringify(jsonData))
    }

    document.addEventListener("DOMContentLoaded", function () {
        socket = new ReconnectingWebSocket("ws://127.0.0.1:8080/ws", null, {debug: true, reconectInterval: 3000})

        const offline = `<span class="badge bg-danger">Not Connected</span>`
        const online = `<span class="badge bg-success">Connected</span>`
        let statusDiv = document.getElementById("status")

        socket.onopen = () => {
            statusDiv.innerHTML = online
        }

        socket.onclose = () => {
            statusDiv.innerHTML = offline
        }

        socket.onerror = error => {
            statusDiv.innerHTML = offline
        }

        socket.onmessage = msg => {
            let data = JSON.parse(msg.data);
            console.log(data.action);

            switch (data.action) {
                case "list_users":
                    let ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);
                    if (data.connected_users.length > 0) {
                        data.connected_users.forEach(function (item) {
                            let li = document.createElement("li");
                            li.appendChild(document.createTextNode(item));
                            ul.appendChild(li);
                        })
                    }
                    break;
                
                case "broadcast":
                    o.innerHTML =  o.innerHTML  + data.message + "<br>"
                    break
            }

        }

        userField.addEventListener("change", function () {
            let jsonData = {};
            jsonData["action"] = "username";
            jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData));
        })

        messageField.addEventListener("keydown", (event)=>{
            if (event.code === "Enter"){
                if (!socket){
                    console.log("no conection")
                    return false
                }

            if ((userField.value === "") || (messageField.value === "")) {
                errorMessage("Fill out user and message!");
                return false;
            } else {
                sendMessage()
            }

            event.preventDefault()
            event.stopPropagation()
         
            }
    })


    document.getElementById("sendBtn").addEventListener("click", function() {
        if ((userField.value === "") || (messageField.value === "")) {
            errorMessage("Fill out user and message!")
            return false;
        } else {
            sendMessage()
        }
    })
})

function sendMessage(){
    let jsonData = {
        action:"broadcast",
        username:userField.value,
        message:messageField.value,
    }

    socket.send(JSON.stringify(jsonData))
    messageField.value = ""
}


function errorMessage(msg){
    notie.alert({
    type: "error",
    text: msg,
    })
}

    
</script>
</html>